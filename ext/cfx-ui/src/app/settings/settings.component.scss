@import 'variables';

:host {
	display: flex;
	flex-direction: column;

	@include appContent;

    overflow-y: hidden;
}

    .setting {
        display: flex;
        width: 100%;
        margin-bottom: $padding/2;

        font-size: 1.5rem;
        line-height: 1;

        .key {
			display: flex;
			align-items: center;

			width: 50%/$multiplier;
			padding: $padding $padding*$multiplier;
			margin-right: $padding/4;

			@include theme() using ($theme) {
				background-color: rgba(gtv($theme, bgColour), .2);
			};
        }

        .value {
            flex-grow: 1;

			@include theme() using ($theme) {
				background: rgba(gtv($theme, bgColour), .2);
			};

            &>* {
                width: 100%;
            }

            .text {
                background-color: transparent;

                &:hover,
                &:focus {
					@include theme() using ($theme) {
						background: rgba(gtv($theme, bgColour), .2);
					};
                }
			}
			
			span {
				position: relative;
				flex-grow: 1;

				display: block;

				font-size: 1.4rem;
				font-weight: 100;
				line-height: 1;
				padding: $padding $padding*$multiplier;

				transition: all .2s ease;

				@include theme() using ($theme) {
					color: gtv($theme, secondaryColour);
				};
			}

			select {
				position: relative;
				width: auto;

				padding: $padding/2 $padding*$multiplier;

				border-radius: 2px;
				border: none;
				outline: none;
				margin-top: 8px;
				margin-left: 16px;

				transition: all .2s ease;

				@include theme() using ($theme) {
					color: gtv($theme, fgColour);
					text-shadow: 0 0 2px rgba(gtv($theme, bgColour), .8);
					background: darken(gtv($theme, greenyColour), 10%);
				};

				&:hover,
				&:focus {
					@include theme() using ($theme) {
						background: gtv($theme, greenyColour);
						box-shadow: 0 5px 25px darken(gtv($theme, greenyColour), 10%);
					};
				}
			}

			option {
				@include theme() using ($theme) {
					box-shadow: 0 5px 25px darken(gtv($theme, greenyColour), 10%);
				};
			}

            .checkbox {
				position: relative;
				flex-grow: 1;

				@include theme() using ($theme) {
					color: gtv($theme, secondaryColour);
				};

				&:last-child {
					margin-right: 0;
				}

				input {
					position: absolute;
					height: 0px;
					width: 0px;
					transform: translateX(-9999px);
				}

				label {
					display: block;
                    width: 100%;

                    //color: rgba(gtv($theme, fgColour), .5);
                    font-size: 1.4rem;
					font-weight: 100;
					line-height: 1;
					padding: $padding $padding*$multiplier;

					transition: all .2s ease;

					&::before {
						content: '';
						display: inline-block;

						width: 1.4vh;
						height: 1.4vh;
						margin-right: $padding/2;

						border-radius: 1px;

						vertical-align: -1px;
						overflow: hidden;

						font-size: 1.7vh;
						line-height: 1;
						text-align: center;

						@include theme() using ($theme) {
							background-color: rgba(gtv($theme, bgColour), .5);
						};

						color: white;
						transition: all .2s ease;						
					}
				}

				&:hover label {
					@include theme() using ($theme) {
						background-color: rgba(gtv($theme, bgColour), .2);
					};
				}

				input:checked + label {
					&::before {
						content: 'âœ“';

						@include theme() using ($theme) {
							background: gtv($theme, greenyColour);
							box-shadow: 0 0 25px darken(gtv($theme, greenyColour), 10%);
							text-shadow: 0 0 2px rgba(gtv($theme, bgColour), .5);
						};
					}
				}
			}
        }
    }