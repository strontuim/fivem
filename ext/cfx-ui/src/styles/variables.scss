$fonts: 'Segoe UI', 'Roboto';

$width: 93vw;
$height: 96vh;

$fontSize: 2vh;
$padding: 1vh;
$multiplier: 1.6813; 

$appNavHeight: 5vh;
$appContentPadding: $padding*2;
$appContentMargin: 4vh;
$appContentHeight: calc(#{$height} - #{$appNavHeight} - #{$appContentMargin});
$appContentWidth: calc(#{$width} - #{$appContentPadding});

$appServersItemHeight: 2.5vh;
$appServersHeaderHeight: $appServersItemHeight;

$filterHeight: 5.5vh;

$colorsLight: (
    bgColour: #93a1a1,
    fgColour: rgb(40, 40, 40),
    secondaryColour: rgb(60, 60, 60),
    greenyColour: rgb(244, 180, 62),
    yellowColour: hsl(53, 100%, 50%),
    redColour: hsl(30, 100%, 40%),
    blueColour: hsl(180, 100%, 40%),
    textColour: rgb(40, 40, 40),
    acrylicBlur: url(#acrylicBlur),
    backgroundImage: url(assets/images/bg.jpg)
);

$colorsDark: (
    bgColour: rgb(40, 40, 40),
    fgColour: rgb(240, 240, 240),
    secondaryColour: rgb(240, 240, 240),
    greenyColour: rgb(244, 180, 62),
    yellowColour: hsl(53, 100%, 50%),
    redColour: hsl(10, 100%, 40%),
    blueColour: hsl(180, 100%, 40%),
    textColour: rgb(240, 240, 240),
    acrylicBlur: url(#acrylicBlurDark),
    backgroundImage: url(assets/images/bg-night.jpg)
);

$colorsRdr: (
    bgColour: rgb(40, 40, 40),
    fgColour: rgb(240, 240, 240),
    secondaryColour: rgb(240, 240, 240),
    greenyColour: rgb(216, 13, 13),
    yellowColour: hsl(53, 100%, 50%),
    redColour: hsl(10, 100%, 40%),
    blueColour: hsl(180, 100%, 40%),
    textColour: rgb(240, 240, 240),
    acrylicBlur: url(#acrylicBlurDark),
    backgroundImage: url(https://cdn.discordapp.com/attachments/644430138276184066/645339402847125504/Red_Dead_Redemption_2_Screenshot_2019.11.16_-_20.07.53.92.png) /* temp placeholder */
);

$themeLight: (
    name: light,
    data: $colorsLight
);

$themeDark: (
    name: dark,
    data: $colorsDark
);

$themeRdr: (
    name: rdr3,
    data: $colorsRdr
);

$themes: $themeLight $themeDark $themeRdr;

@function gtv($theme, $name) {
    @return map-get(
        map-get($theme, data),
        $name
    );
}

@mixin theme() {
    @each $theme in $themes {
        :host-context(.theme-#{map-get($theme, name)}) & {
            @content ($theme);
        }
    }
}

@mixin themeHostWorkaround() {
    @each $theme in $themes {
        :host-context(.theme-#{map-get($theme, name)}) {
            @content ($theme);
        }
    }
}

@mixin themeNoHost() {
    @each $theme in $themes {
        .theme-#{map-get($theme, name)} & {
            @content ($theme);
        }
    }
}

@mixin themeIsHost() {
    @each $theme in $themes {
        &.theme-#{map-get($theme, name)} {
            @content ($theme);
        }
    }
}

@mixin aspectLimited() {
    @for $w from 17 to 33 {
        @media only screen and (min-aspect-ratio: #{$w}/9) {
            & {
                width: calc(100% - (100vw * ((#{$w} - 16) / #{$w})) + 4vw);
                margin-left: auto;
                margin-right: auto;
            }
        }
    }
}

@mixin fullWidthPadded($extraPadding: $padding*4) {
    width: calc(#{$width} - #{$extraPadding});

    @include aspectLimited();
}

@mixin backdropBlur($amount: 5px) {
    backdrop-filter: blur($amount);
}

@mixin appContentNoLimit() {
    height: $appContentHeight;
	margin-top: $appContentMargin;
    padding-left: #{$appContentPadding};
    padding-right: #{$appContentPadding};
    padding-top: $padding*2;

    position: relative;
    
    /*box-shadow: rgba(30, 30, 30, .2) 0vw -0.4vh 8.5vh;*/
    box-shadow: 0 2.03vh 6.5vh 0.005vh rgba(0, 0, 0, 0.56);

    overflow: hidden;

   
    &:after {
        content: '';
        width: 100%;
        height: 100%;
        top: 0px;
        left: 0px;

        position: absolute;
        z-index: -999;

        transform: scale(1.1);
    }

    @include themeHostWorkaround() using ($theme) {
        &:after {
            /* tricky! Chrome broke this in M73, so we will have to do old-fashioned hacks... */
            /*backdrop-filter: gtv($theme, acrylicBlur);*/
            filter: gtv($theme, acrylicBlur);
            background-image: var(--my-background-image);
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center center; /* a well-trained eye will notice this is very much not seamless... */
                                                /* go complain to Google, not us. */
        }
    };

    @include themeNoHost() using ($theme) {
        &:after {
            /* tricky! Chrome broke this in M73, so we will have to do old-fashioned hacks... */
            /*backdrop-filter: gtv($theme, acrylicBlur);*/
            filter: gtv($theme, acrylicBlur);
            background-image: var(--my-background-image);
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center center; /* a well-trained eye will notice this is very much not seamless... */
                                                /* go complain to Google, not us. */
        }
    };

    :host-context(.webapp) {
        box-shadow: none;
        padding-top: 0;

        &:after {
            filter: none !important;
        }
    }
}

@mixin appContent() {
    @include aspectLimited();
    @include appContentNoLimit();
}